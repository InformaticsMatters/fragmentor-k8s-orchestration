---

- name: Include prep
  include_tasks: prep.yaml

- name: Load parameters from {{ fp_parameter_file }}
  include_vars:
    file: "{{ fp_parameter_file }}"

# A kubernetes host and an API key must be set.
# Either environment variables wil have been set by the user
# or AWX 'kubernetes' credentials will have injected them.
# Either way the variables 'k8s_auth_host' and
# 'k8s_auth_api_key' must have been set.
- name: Assert authentication
  assert:
    that:
    - k8s_auth_host | length > 0
    - k8s_auth_api_key | length > 0

- name: Assert kubeconfig file is named
  assert:
    that:
    - fp_kubeconfig_file | length > 0
    - fp_kubeconfig_file != 'SetMe'

- name: Assert player image tag is named
  assert:
    that:
    - fp_image_tag | length > 0
    - fp_image_tag != 'SetMe'

# Discover the hostname (an IP address) of the kubernetes cluster
# control plane. We do this to set a host alias in the Player Pod
# to avoid the need for a DNS lookup (something that may be unreliable on
# the chosen cluster)

- name: Run kubectl (to get the host)
  command: kubectl config view --minify --output 'jsonpath={.clusters[0].cluster.server}'
  register: k8s_host
  changed_when: false

- name: Extract k8s hostname (or IP address)
  set_fact:
    k8s_hostname: "{{ k8s_host.stdout_lines[0] | urlsplit('hostname') }}"

- name: Use hostname as IP address (if hostname is an IP address)
  set_fact:
    k8s_ip: "{{ k8s_hostname }}"
  when: k8s_hostname is ansible.utils.ipv4

- name: Use Python's 'dig' to get the IP address (if hostname is not an IP address)
  set_fact:
    k8s_ip: "{{ lookup('dig', k8s_hostname) }}"
  when: k8s_hostname is not ansible.utils.ipv4

- name: Display k8s hostname and address
  debug:
    msg: k8s_hostname={{ k8s_hostname }} k8s_ip={{ k8s_ip }}

# Go...

# There is no 'undeploy' fragmentation is a 'Job'
# so there's (normally) nothing to delete.

- name: Deploy
  module_defaults:
    group/k8s:
      host: "{{ k8s_auth_host }}"
      api_key: "{{ k8s_auth_api_key }}"
  block:

  - name: Include deploy
    include_tasks: deploy.yaml
